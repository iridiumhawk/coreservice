## DataSource settings: set here your own configurations for the database
## connection. In this example we have "dojsb" as database name and
## "root" as username and password.
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.url = jdbc:h2:mem:store
#spring.datasource.username = postgres
#spring.datasource.password =
#

## Keep the connection alive if idle for a long time (needed in production)
##spring.datasource.testWhileIdle = true
##spring.datasource.validationQuery = SELECT 1

## Show or not log for each sql query
spring.jpa.show-sql = true

## Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto = create

## Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

## Use spring.jpa.properties.* for Hibernate native properties (the prefix is
## stripped before adding them to the entity manager)

## The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect
spring.jpa.properties.hibernate.hbm2ddl.auto=update

server.port = 8181
#spring.profiles.active=prod

logging.level.root=info
logging.level.org.springframework=warn
logging.level.org.hibernate=warn

#mail properties
spring.mail.host=smtp.gmail.com
spring.mail.port=465
spring.mail.username=
spring.mail.password=
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000
spring.mail.properties.mail.smtp.ssl.enable = true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com

#custom
channels.sms.apikey=1f587ef2-cf08-4584-7968-28b498643bb5
channels.sms.pattern=https://sms.ru/sms/send?api_id={0}&to={1}&text={2}&json=1
device.command.pattern=http://*:8083/